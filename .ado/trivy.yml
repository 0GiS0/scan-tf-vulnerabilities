# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

pool:
  vmImage: ubuntu-latest

parameters:
  - name: trivyVersion
    default: 0.45.0
  - name: root_directory
    default: .
steps:
  - task: CmdLine@2
    displayName: "Download and Install Trivy vulnerability scanner"
    inputs:
      script: |
        sudo apt-get install rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v${{ parameters.trivyVersion }}/trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb
        sudo dpkg -i trivy_${{ parameters.trivyVersion }}_Linux-64bit.deb
        trivy -v

  # - task: CmdLine@2
  #   displayName: "LOW/MED - Trivy vulnerability scanner in IaC mode"
  #   inputs:
  #     script: |
  #       trivy config --severity LOW,MEDIUM --exit-code 0 ${{ parameters.root_directory }}
  # - task: CmdLine@2
  #   displayName: "HIGH/CRIT - Trivy vulnerability scanner in IaC mode"
  #   inputs:
  #     script: |
  #       trivy config --severity HIGH,CRITICAL --exit-code 1 ${{ parameters.root_directory }}
  - task: CmdLine@2
    displayName: "Trivy vulnerability scanner in IaC mode"
    inputs:
      script: |
        trivy config --exit-code 0 --format sarif ${{ parameters.root_directory }} > $(Build.ArtifactStagingDirectory)/trivy-results.sarif
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/trivy-results.sarif'
      ArtifactName: 'CodeAnalysisLogs'
      publishLocation: 'Container'

