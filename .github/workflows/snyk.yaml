name: Snyk Security

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: write # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status      
    runs-on: ubuntu-latest
    env:
      # This is where you will need to introduce the Snyk API token created with your Snyk account
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SARIF_FOLDER: sarif-results
    steps:
      - uses: actions/checkout@v3
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb
              
      # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
      - name: Snyk IaC test and report
        run: |           
          snyk iac test --sarif > ../${{env.SARIF_FOLDER}}/snyk-iac.sarif || true       

        # Push the Snyk Code results into GitHub Code Scanning tab
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{env.SARIF_FOLDER}}